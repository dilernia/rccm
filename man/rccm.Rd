% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rccm.R
\name{rccm}
\alias{rccm}
\title{Random Covariance Clustering Model}
\usage{
rccm(
  x,
  lambda1,
  lambda2,
  lambda3 = 0,
  nclusts,
  delta = 0.001,
  max.iters = 100,
  z0s = NULL,
  ncores = 1
)
}
\arguments{
\item{x}{List of \eqn{K} data matrices each of dimension \eqn{n_k} x \eqn{p}}

\item{lambda1}{Non-negative scalar. Induces sparsity in subject-level matrices.}

\item{lambda2}{Non-negative scalar. Induces similarity between subject-level matrices and cluster-level matrices.}

\item{lambda3}{Non-negative scalar. Induces sparsity in cluster-level matrices.}

\item{nclusts}{Number of clusters or groups.}

\item{delta}{Threshold for convergence.}

\item{max.iters}{Maximum number of iterations for block coordinate descent optimization.}

\item{z0s}{Vector of length \eqn{K} with initial cluster memberships.}
}
\value{
A list of length 3 containing:
\enumerate{
\item \eqn{p} x \eqn{p} x \eqn{nclusts} array of \eqn{nclusts} number of estimated cluster-level precision matrices (Omega0).
\item \eqn{p} x \eqn{p} x \eqn{K} array of \eqn{K} number of estimated subject-level precision matrices (Omegas).
\item \eqn{nclusts} x \eqn{K} matrix of estimated cluster weights for each subject (weights).
}
}
\description{
This function implements the Random Covariance Clustering Model (RCCM) for joint estimation of
sparse precision matrices belonging to multiple clusters or groups. Optimization is conducted using block
coordinate descent.
}
\examples{
# Generate data with 2 clusters with 12 and 10 subjects respectively,
# 15 variables for each subject, 100 observations for each variable for each subject,
# the groups sharing about 50\% of network connections, and 10\% of differential connections
# within each group
myData <- rccSim(G = 2, clustSize = c(12, 10), p = 15, n = 100, overlap = 0.50, rho = 0.10)

# Analyze simulated data with RCCM
result <- rccm(x = myData$simDat, lambda1 = 10, lambda2 = 50, lambda3 = 2, nclusts = 2, delta = 0.001)

}
\author{
Andrew DiLernia
}
